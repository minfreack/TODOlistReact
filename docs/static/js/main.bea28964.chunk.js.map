{"version":3,"sources":["Task.jsx","TaskGrid.jsx","App.jsx","index.jsx"],"names":["Task","task","handleChecked","deleteTask","index","className","completed","type","onChange","checked","width","height","points","onClick","TaskGrid","useState","JSON","parse","localStorage","getItem","tasks","setTasks","inputTask","setInputTask","selectedButton","setSelectedButton","id","prevState","copyArray","slice","setItem","stringify","getLocalStorageTasks","indexOf","console","log","splice","onSubmit","e","preventDefault","value","target","placeholder","autoFocus","map","filter","length","href","App","ReactDOM","render","document","getElementById"],"mappings":"+OAEaA,EAAO,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MACnD,OACQ,qBAAKC,UAAS,eAAUJ,EAAKK,UAAY,YAAc,IAAO,UAASF,EAAvE,SACR,sBAAKC,UAAU,OAAf,UACA,wBAAOA,UAAU,WAAjB,UACG,uBAAOA,UAAU,kBAAkBE,KAAK,WAAWC,SAAU,kBAAMN,EAAcE,EAAOH,EAAKK,YAAYG,QAASR,EAAKK,YACvH,qBAAKD,UAAU,kBAAkBK,MAAM,KAAKC,OAAO,KAAnD,SACE,0BAAUC,OAAO,wBAGtB,qBAAKP,UAAU,YAAf,SACC,uBAAOA,UAAU,aAAjB,SAA+BJ,EAAKA,SAEpC,wBAAQI,UAAU,UAAUQ,QAAS,kBAAMV,EAAWF,YCX9Ca,EAAW,WAGpB,MAA0BC,mBACrBC,KAAKC,MAAMC,aAAaC,QAAQ,UAAaH,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,IAD9F,mBAAOC,EAAP,KAAcC,EAAd,KAIA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEA,EAA4CR,mBAAS,OAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KAkBMvB,EAAgB,SAACwB,EAAIpB,GACvBe,GAAS,SAACM,GAAe,IAAMC,EAAYD,EAAUE,QAMjD,OALCD,EAAUF,GAAV,2BACOE,EAAUF,IADjB,IAEIpB,WAAaA,IAElBY,aAAaY,QAAQ,QAASd,KAAKe,UAAL,YAAoBH,KAC3CA,MAGTI,EAAuB,WACzBX,EAASL,KAAKC,MAAMC,aAAaC,QAAQ,YAyBvChB,EAAa,SAACF,GAChB+B,IACA,IAAM5B,EAAQgB,EAAMa,QAAQhC,GAC5BiC,QAAQC,IAAI/B,GACZiB,GAAU,SAACM,GAAe,IAAMC,EAAYD,EAAUE,QAGlD,OAFAD,EAAUQ,OAAOhC,EAAO,GACxBc,aAAaY,QAAQ,QAASd,KAAKe,UAAL,YAAoBH,KAC3CA,MAIf,OACQ,0BAASvB,UAAU,UAAnB,UACT,yBAAQA,UAAU,SAAlB,UACC,4CACY,sBAAMgC,SAnEF,SAACC,GACb,IAAMrC,EAAO,CACTA,KAAMqB,EACNhB,WAAW,GAEfgC,EAAEC,iBACFlB,EAAS,GAAD,mBAAMD,GAAN,CAAanB,KACrBiB,aAAaY,QAAQ,QAASd,KAAKe,UAAL,sBAAoBX,GAApB,CAA2BnB,MACzDsB,EAAa,KA2DL,SACZ,uBAAOlB,UAAU,WAAWmC,MAAOlB,EAAWd,SAzDvB,SAAC8B,GACpBf,EAAae,EAAEG,OAAOD,QAwD8CE,YAAY,8BAAqBC,WAAS,SAGnH,yBAAStC,UAAU,OAAnB,gBAEqBe,QAFrB,IAEqBA,OAFrB,EAEqBA,EAAOwB,KAAK,SAAE3C,EAAOG,GAAT,OAAmB,cAAC,EAAD,CAAmBA,MAAOA,EAAOH,KAAMA,EAAMC,cAAeA,EAAeC,WAAYA,GAA3EC,QAKhE,yBAAQC,UAAU,SAAlB,UACC,uBAAMA,UAAU,aAAhB,UAA6B,iCAASe,EAAMyB,QAAQ,SAAA5C,GAAI,OAAuB,IAAnBA,EAAKK,aAAqBwC,SAAtF,mBACA,qBAAIzC,UAAU,UAAd,UACC,6BACC,mBAAGA,UAAS,iBAA8B,QAAlBmB,GAA2B,YAAeE,GAAG,MAAMqB,KAAK,IAAIlC,QAAS,WAnD3FmB,IAmD8GP,EAAkB,QAAlI,qBAED,6BACC,mBAAGpB,UAAS,iBAA8B,aAAlBmB,GAAgC,YAAeE,GAAG,WAAWqB,KAAK,YAAYlC,QAAU,WAlD9GmB,IACAX,GAAU,SAACM,GAAD,OAAeA,EAAUkB,QAAQ,SAAC5C,GAAD,OAA6B,IAAnBA,EAAKK,gBAiD0EmB,EAAkB,aAAxJ,0BAED,6BACC,mBAAGpB,UAAS,iBAA8B,cAAlBmB,GAAiC,YAAeE,GAAG,YAAYqB,KAAK,aAAalC,QAAU,WAhDjHmB,IACAX,GAAU,SAACM,GAAD,OAAeA,EAAUkB,QAAQ,SAAC5C,GAAD,OAA6B,IAAnBA,EAAKK,gBA+C+EmB,EAAkB,cAA7J,8BAGF,wBAAQpB,UAAU,kBAAkBqB,GAAG,SAASqB,KAAK,mBAAmBlC,QA/C5C,WACxBmB,IACAX,GAAU,SAACM,GAAgB,IAAMC,EAAYD,EAAUkB,QAAQ,SAAC5C,GAAD,OAA6B,IAAnBA,EAAKK,aAE1E,OADAY,aAAaY,QAAQ,QAASd,KAAKe,UAAL,YAAoBH,KAC3CA,MA2Cf,uCC5FWoB,MARf,WACE,OACE,qBAAK3C,UAAU,YAAf,SACE,cAAC,EAAD,OCHN4C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bea28964.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Task = ({task, handleChecked, deleteTask, index}) => {\r\n    return (\r\n            <div className={`task ${task.completed ? 'completed' : ''}`}  data-id={index}>\r\n\t\t\t\t<div className=\"view\">\r\n\t\t\t\t<label className=\"checkbox\">\r\n  \t\t\t\t\t<input className=\"checkbox__input\" type=\"checkbox\" onChange={() => handleChecked(index, task.completed)} checked={task.completed}></input>\r\n  \t\t\t\t\t<svg className=\"checkbox__check\" width=\"24\" height=\"24\">\r\n    \t\t\t\t\t<polyline points=\"20 6 9 17 4 12\"></polyline>\r\n  \t\t\t\t\t</svg>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className=\"task-name\">\r\n\t\t\t\t\t<label className=\"task-label\">{task.task}</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"destroy\" onClick={() => deleteTask(task)}></button>\r\n\t\t    \t</div>\r\n\t\t\t</div> \r\n\t\t\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Task } from './Task'\r\n\r\n\r\nexport const TaskGrid = () => {\r\n\r\n\r\n    const [tasks, setTasks] = useState(\r\n        (JSON.parse(localStorage.getItem('tasks'))) ? JSON.parse(localStorage.getItem('tasks')) : []\r\n    );\r\n\r\n    const [inputTask, setInputTask] = useState('');\r\n\r\n    const [selectedButton, setSelectedButton] = useState('all');\r\n\r\n    const addTask = (e) => {\r\n        const task = {\r\n            task: inputTask,\r\n            completed: false\r\n        }\r\n        e.preventDefault();\r\n        setTasks([ ...tasks, task]);\r\n        localStorage.setItem('tasks', JSON.stringify([ ...tasks, task ]));\r\n        setInputTask('');\r\n    }\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputTask(e.target.value);\r\n    }\r\n\r\n\r\n    const handleChecked = (id, completed) => {\r\n        setTasks((prevState) => {const copyArray = prevState.slice()\r\n             copyArray[id]= {\r\n                 ...copyArray[id],\r\n                 completed : !completed\r\n                }\r\n            localStorage.setItem('tasks', JSON.stringify([ ...copyArray ]));\r\n            return copyArray});\r\n    }\r\n\r\n    const getLocalStorageTasks = () => {\r\n        setTasks(JSON.parse(localStorage.getItem('tasks')));\r\n    }\r\n\r\n    const allTasks = () => {\r\n        getLocalStorageTasks();\r\n    }\r\n\r\n    const pendingTasks = () => {\r\n        getLocalStorageTasks();\r\n        setTasks( (prevState) => prevState.filter( (task) => task.completed === false))\r\n    }\r\n\r\n    const completeTasks = () => {\r\n        getLocalStorageTasks();\r\n        setTasks( (prevState) => prevState.filter( (task) => task.completed === true))\r\n    }\r\n    \r\n    const deleteCompleteTasks = () => {\r\n        getLocalStorageTasks();\r\n        setTasks( (prevState) => { const copyArray = prevState.filter( (task) => task.completed === false)\r\n            localStorage.setItem('tasks', JSON.stringify([ ...copyArray ]));\r\n            return copyArray;\r\n        })\r\n    }\r\n\r\n    const deleteTask = (task) => {\r\n        getLocalStorageTasks();\r\n        const index = tasks.indexOf(task);\r\n        console.log(index);\r\n        setTasks( (prevState) => {const copyArray = prevState.slice()\r\n            copyArray.splice(index, 1);\r\n            localStorage.setItem('tasks', JSON.stringify([ ...copyArray ]));\r\n            return copyArray;\r\n        })\r\n    }\r\n\r\n    return (\r\n            <section className=\"todoapp\">\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\t<h1>To do list</h1>\r\n                <form onSubmit={addTask}>\r\n\t\t\t\t<input className=\"new-todo\" value={inputTask} onChange={handleOnChange} placeholder=\"¿Qué harás hoy? :)\" autoFocus></input>\r\n                </form>\r\n\t\t\t</header>\r\n\t\t\t<section className=\"main\">\r\n                    {\r\n                        tasks?.map( ( task , index) => <Task  key={index} index={index} task={task} handleChecked={handleChecked} deleteTask={deleteTask} />\r\n                        )\r\n                    }\r\n\r\n\t\t\t</section>\r\n\t\t\t<footer className=\"footer\">\r\n\t\t\t\t<span className=\"todo-count\"><strong>{tasks.filter( task => task.completed === false).length}</strong> pendiente(s)</span>\r\n\t\t\t\t<ul className=\"filters\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className={`filtro ${selectedButton ==='all' && 'selected' }`} id=\"all\" href=\"/\" onClick={() => {allTasks(); setSelectedButton('all');}}>Todos</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className={`filtro ${selectedButton ==='pendings' && 'selected' }`} id=\"pendings\" href=\"#pendings\" onClick={ () => {pendingTasks();setSelectedButton('pendings') }} >Pendientes</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className={`filtro ${selectedButton ==='completed' && 'selected' }`} id=\"completed\" href=\"#completed\" onClick={ () => {completeTasks(); setSelectedButton('completed')}} >Completados</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button className=\"clear-completed\" id=\"delete\" href=\"#deleteCompleted\" onClick={deleteCompleteTasks}>Borrar completados</button>\r\n\t\t\t</footer>\r\n\t\t</section>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport { TaskGrid } from './TaskGrid';\n\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TaskGrid />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport './mystyles.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}